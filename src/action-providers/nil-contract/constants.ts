import type { AbiFunction } from 'abitype';

// Default values
export const DEFAULT_SHARD_ID = 1;
export const DEFAULT_GAS_MULTIPLIER = 1.2;
export const DEFAULT_GAS_LIMIT = 3000000;

// Contract types definition
export type ContractType = {
  description: string;
  bytecode: string;
  abi?: readonly any[] | any[];
};

// Counter Contract ABI
export const COUNTER_ABI = [
  {
    "inputs": [],
    "name": "increment",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "getValue",
    "outputs": [{"type": "uint256"}],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {"type": "uint256", "name": "hash"},
      {"type": "bytes", "name": "authData"}
    ],
    "name": "verifyExternal",
    "outputs": [{"type": "bool"}],
    "stateMutability": "pure",
    "type": "function"
  },
  {
    "stateMutability": "payable",
    "type": "receive"
  }
] as const;

// Advanced Counter Contract ABI
export const ADVANCED_COUNTER_ABI = [
  {
    "inputs": [
      {"type": "uint256", "name": "initialValue"},
      {"type": "uint256", "name": "maxValue"}
    ],
    "stateMutability": "nonpayable",
    "type": "constructor"
  },
  {
    "inputs": [],
    "name": "increment",
    "outputs": [{"type": "uint256"}],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "decrement",
    "outputs": [{"type": "uint256"}],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "getValue",
    "outputs": [{"type": "uint256"}],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "getMaxValue",
    "outputs": [{"type": "uint256"}],
    "stateMutability": "view",
    "type": "function"
  }
] as const;

// Counter Contract Bytecode - Remove newlines and template literal
export const COUNTER_BYTECODE = "0x608060405234801561001057600080fd5b50610265806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c8063209652551461003b57806361bc221a14610059575b600080fd5b610043610063565b60405161005091906100c9565b60405180910390f35b61006161006c565b005b60008054905090565b600080815480929190610080906100e4565b9190505550565b6000819050919050565b6100a48161008b565b82525050565b60006020820190506100bf600083018461009b565b92915050565b6100c38161008b565b82525050565b60006020820190506100de60008301846100ba565b92915050565b60006100ef8261008b565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036101215761012061012c565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fdfe";

// Advanced Counter Contract Bytecode
export const ADVANCED_COUNTER_BYTECODE = "0x608060405234801561001057600080fd5b5060405161047f38038061047f8339818101604052810190610032919061008d565b816000819055508060028190555050506100d9565b600080fd5b6000819050919050565b61006a81610057565b811461007557600080fd5b50565b60008151905061008781610061565b92915050565b600080604083850312156100a4576100a3610052565b5b60006100b285828601610078565b92505060206100c385828601610078565b9150509250929050565b60008054905090565b60025481565b60008060025403610110576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161010790610283565b60405180910390fd5b600160005403610157576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161014e906102ef565b60405180910390fd5b600160008082825461016991906102de565b925050819055506000549050919050565b60008054905090565b6000819050919050565b6101ba816101a7565b82525050565b60006020820190506101d560008301846101b1565b92915050565b600082825260208201905092915050565b7f436f756e7465722063616e6e6f74206265206c657373207468616e207a65726f600082015250565b600061022160208361001b565b915061022c8261002c565b602082019050919050565b6000602082019050818103600083015261025081610214565b9050919050565b7f436f756e746572206c696d69742072656163686564000000000000000000000000600082015250565b600061028d601583610001b565b915061029882610261565b602082019050919050565b60006020820190508181036000830152610298816102a0565b9050919050565b6000819050919050565b60006102c9826102b0565b91506102d4836102b0565b9250828201905080821115610000576000905092915050565b60006102e9826102b0565b91506102f4836102b0565b925082820390508181111561000057600090509291505056fea2646970667358221220a4c45c94b6d0f7f6f9d2f2f2f9d2f2f2f9d2f2f2f9d2f2f2f9d2f2f2f9d2f2f264736f6c63430008090033";

// Manufacturer Contract ABI
export const MANUFACTURER_ABI = [
  {
    "inputs": [
      {"type": "string", "name": "name"},
      {"type": "address", "name": "initialOwner"}
    ],
    "stateMutability": "nonpayable",
    "type": "constructor"
  },
  {
    "inputs": [],
    "name": "getName",
    "outputs": [{"type": "string"}],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "getOwner",
    "outputs": [{"type": "address"}],
    "stateMutability": "view",
    "type": "function"
  }
] as const;

// Retainer Contract ABI
export const RETAINER_ABI = [
  {
    "inputs": [
      {"type": "address", "name": "serviceProvider"},
      {"type": "uint256", "name": "rate"},
      {"type": "uint256", "name": "multiplier"}
    ],
    "stateMutability": "nonpayable",
    "type": "constructor"
  },
  {
    "inputs": [],
    "name": "getRate",
    "outputs": [{"type": "uint256"}],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "getBalance",
    "outputs": [{"type": "uint256"}],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "deposit",
    "outputs": [],
    "stateMutability": "payable",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "withdraw",
    "outputs": [{"type": "uint256"}],
    "stateMutability": "nonpayable",
    "type": "function"
  }
] as const;

// Manufacturer Contract Bytecode (placeholder)
export const MANUFACTURER_BYTECODE = "0x608060405234801561001057600080fd5b506040516108a83803806108a88339818101604052810190610032919061015c565b816000908161004291906103c9565b5080600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050610482565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6100e7826100a0565b810181811067ffffffffffffffff82111715610106576101056100b0565b5b80604052505050565b6000610118610082565b905061012482826100dd565b919050565b600067ffffffffffffffff821115610144576101436100b0565b5b61014d826100a0565b9050602081019050919050565b6000806040838503121561017357610172610078565b5b600083013567ffffffffffffffff8111156101915761019061007c565b5b61019d85828601610110565b92505060206101ae85828601610250565b9150509250929050565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806101ff57607f821691505b60208210810361021257610211610219565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b60006004829050600082116103c1576000905092915050565b600082821b905092915050565b6000600482905067ffffffffffffffff8111156200056e576200056d620004ce565b5b62000579826200053d565b95508019841693508086168417925050509392505050565b6000819050919050565b6000620005aa826200059a565b9050620005b8828262000557565b9150819050919050565b600082825260208201905092915050565b60005b83811015620005fd578082015181840152602081019050620005e0565b60008484015250505050565b60006200061682620005d8565b9150620006228362000505565b925082821084831483151762000649577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006200066c8262000505565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036200069e576200069d6200050d565b5b600182019050919050565b6000620006a68262000505565b9150620006b38362000505565b925082620006b957620006b5a264697066735822122062000686565b5b828204905092915050565b6000620006f4826200045f565b915062000701836200045f565b9250620007247fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff848462000746565b905092915050565b6000620007398262000456565b915062000747836200033e565b92915050565b600062000758826200076c565b92503a62000769846200066d565b91505092915050565b60006200076f826200033e565b9150919050565b600062000790826200033e565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203620007c257620007c16200068e565b5b600182019050919050565b6000620007c98262000456565b915060008213620007be578190508282620007d6575b808214620007a6578190508082620007cf565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600062000825826200033e565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036200085757600080fd5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f496e646578206f7574206f6620626f756e64730000000000000000000000000060008201527f0000000000000000000000000000000000000000000000000000000000000000602082015250565b6000620008dd82620008c0565b9150620008ea82620008e0565b5060408201915081905092915050565b62000900816200033e565b82525050565b620000fe806200083e565b8291138315620009435760006200092283620008d2565b91505b50919050565b60006200095382620008f5565b91506200096083620008f5565b9250828210156200097457600080fd5b82820390509291505056fea2646970667358221220a17cdf2822776c236f2d881c8d4d3d32a1a8b8be23fbb1be07df6e5ac74c358464736f6c634300080c0033";

// Retainer Contract Bytecode (placeholder)
export const RETAINER_BYTECODE = "0x608060405234801561001057600080fd5b506040516107d23803806107d28339818101604052810190610032919061010f565b82600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508160028190555080600381905550505061016b565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100bc82610091565b9050919050565b6100cc816100b1565b81146100d757600080fd5b50565b6000815190506100e9816100c3565b92915050565b6000819050919050565b610102816100ef565b811461010d57600080fd5b50565b60008060006060848603121561012857610127610099565b5b6000610136868287016100da565b9350506020610147868287016100ff565b9250506040610158868287016100ff565b9150509250925092565b610657806101796000396000f3fe60806040526004361061004a5760003560e01c80633a6e3d241461004f5780636896fabf1461007a578063b69ef8a8146100a5578063d0e30db0146100d0578063e941fa78146100da575b600080fd5b34801561005b57600080fd5b50610064610105565b604051610071919061040d565b60405180910390f35b34801561008657600080fd5b5061008f61010f565b60405161009c919061040d565b60405180910390f35b3480156100b157600080fd5b506100ba610119565b6040516100c7919061040d565b60405180910390f35b6100d8610161565b005b3480156100e657600080fd5b506100ef6101f3565b6040516100fc919061040d565b60405180910390f35b6000600254905090565b6000600054905090565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461015957600080fd5b600054905090565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146101bb57600080fd5b34600060008282546101cd9190610431565b92505081905550600354600060008282546101e8919061046b565b9250508190555050565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461024f57600080fd5b6000805461025d9190610431565b9050600080826102948282604051610275906103fe565b602060405101807f4e487b7100000000000000000000000000000000000000000000000000000000600052606460045260246000fd5b610296919061046b56b92505081905550600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc6000549081150290604051600060405180830381858888f19350505050158015610306573d6000803e3d6000fd5b50565b600061034e82610348565b9050919050565b6000610338826102fe565b9050919050565b6000610373826102fe565b9150610386836102fe565b9250848210156103f1577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000831603610400576103ff6103e1565b5b828204905092915050565b6000819050919050565b6000602082019050610428600083018461041d565b92915050565b6000610444826104a1565b915061045883610490565b9250867fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610491576104906104bf565b5b828206905092915050565b60006104ab826104a1565b91506104b6836104a1565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610559577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b82820390509291505056fea26469706673582212202b8ac1d4b85f97b17ee3a0e8ad21c91c493d8a87f1c4e17bd8d95af0b7b7d67064736f6c634300080e0033";

// TOKEN bytecode (truncated for readability)
export const TOKEN_BYTECODE = "0x60806040523480156200001157600080fd5b50604051620015903803806200159083398181016040528101906200003791906200020a565b8360009081620000499190620004c7565b50826001908162000059919062000684565b50816002819055508060036000815462000073919062000841565b82604051908082528060200260200182016040528015620001295781602001602082028036833701905050" as const;

// Contract types mapping
export const CONTRACT_TYPES: Record<string, ContractType> = {
  COUNTER: {
    description: "Simple counter contract with increment and get functions",
    bytecode: COUNTER_BYTECODE,
    abi: COUNTER_ABI
  },
  ADVANCED_COUNTER: {
    description: "Advanced counter with constructor arguments, increment, decrement, and max value",
    bytecode: ADVANCED_COUNTER_BYTECODE,
    abi: ADVANCED_COUNTER_ABI
  },
  TOKEN: {
    description: "ERC20-compatible token contract",
    bytecode: TOKEN_BYTECODE
  },
  MANUFACTURER: {
    description: "Manufacturer record contract with name and owner",
    bytecode: MANUFACTURER_BYTECODE,
    abi: MANUFACTURER_ABI
  },
  RETAINER: {
    description: "Service retainer contract with deposit and withdraw functionality",
    bytecode: RETAINER_BYTECODE,
    abi: RETAINER_ABI
  }
};